active_session_test.go:6: File is not `goimports`-ed (goimports)
aggregated_file.go:10:20: bson(camel): got 'duration_ms' want 'durationMs' (tagliatelle)
aggregated_session.go:7:28: bson(camel): got '_id' want 'id' (tagliatelle)
aggregated_session.go:10:28: bson(camel): got 'date_string' want 'dateString' (tagliatelle)
aggregated_session.go:11:28: bson(camel): got 'total_time_ms' want 'totalTimeMs' (tagliatelle)
aggregated_sessions.go:14:41: importShadow: shadow of imported from 'github.com/creativecreature/code-harvest/truncate' package 'truncate' (gocritic)
buffer.go:3:83: Comment should end in a period (godot)
client/client.go:9: File is not `goimports`-ed (goimports)
client/client.go:43:18: Error return value of `c.rpcClient.Call` is not checked (errcheck)
client/client.go:51:18: Error return value of `c.rpcClient.Call` is not checked (errcheck)
client/client.go:60:18: Error return value of `c.rpcClient.Call` is not checked (errcheck)
client/client.go:67:18: Error return value of `c.rpcClient.Call` is not checked (errcheck)
cmd/aggregate/main.go:8: File is not `goimports`-ed (goimports)
cmd/aggregate/main.go:13:11: Comment should end in a period (godot)
cmd/aggregate/main.go:39:59: Comment should end in a period (godot)
cmd/client/main.go:16:2: importShadow: shadow of imported from 'github.com/creativecreature/code-harvest/client' package 'client' (gocritic)
cmd/server/main.go:20:2: importShadow: shadow of imported from 'github.com/creativecreature/code-harvest/server' package 'server' (gocritic)
event.go:5:2: var-naming: struct field Id should be ID (revive)
event.go:5:2: ST1003: struct field Id should be ID (stylecheck)
filereader/file_reader.go:47:47: importShadow: shadow of imported package 'filepath' (gocritic)
filereader/file_reader.go:95:1: receiver-naming: receiver name git should be consistent with previous receiver name g for FileReader (revive)
filereader/file_reader.go:113:21: ST1016: methods on the same type should have the same receiver name (seen 1x "git", 3x "g") (stylecheck)
filereader/file_reader.go:135:2: importShadow: shadow of imported package 'path' (gocritic)
filetypes/filetypes.go:51:9: indent-error-flow: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary) (revive)
filetypes/filetypes_test.go:27:8: Error return value of `filetypes.Type` is not checked (errcheck)
logger/logger.go:27:57: Comment should end in a period (godot)
mock/file_reader.go:4: File is not `goimports`-ed (goimports)
mock/file_reader.go:12:30: unused-parameter: parameter 'path' seems to be unused, consider removing or renaming it as _ (revive)
mock/reader.go:42:25: unused-parameter: parameter 'filename' seems to be unused, consider removing or renaming it as _ (revive)
proxy/proxy.go:4: File is not `goimports`-ed (goimports)
proxy/proxy.go:7:60: Comment should end in a period (godot)
repositories.go:11:26: var-declaration: should drop = 0 from declaration of var durationMs; it is the zero value (revive)
repository.go:9:29: bson(camel): got 'duration_ms' want 'durationMs' (tagliatelle)
server/handlers.go:7: File is not `goimports`-ed (goimports)
server/handlers.go:138:23: ST1016: methods on the same type should have the same receiver name (seen 10x "server", 1x "s") (stylecheck)
server/options.go:6: File is not `goimports`-ed (goimports)
server/options.go:21:16: importShadow: shadow of imported from 'github.com/creativecreature/code-harvest/clock' package 'clock' (gocritic)
server/options.go:21:29: unexported-return: exported func WithClock returns unexported type server.option, which can be annoying to use (revive)
server/options.go:38:40: unexported-return: exported func WithFileReader returns unexported type server.option, which can be annoying to use (revive)
server/options.go:49:18: importShadow: shadow of imported from 'github.com/creativecreature/code-harvest/storage' package 'storage' (gocritic)
server/options.go:49:52: unexported-return: exported func WithStorage returns unexported type server.option, which can be annoying to use (revive)
server/options.go:69:23: unexported-return: exported func WithLog returns unexported type server.option, which can be annoying to use (revive)
server/options.go:80:46: unexported-return: exported func New returns unexported type *server.server, which can be annoying to use (revive)
server/server.go:17: File is not `goimports`-ed (goimports)
server/server.go:28:2: var-naming: struct field activeClientId should be activeClientID (revive)
server/server.go:28:2: ST1003: struct field activeClientId should be activeClientID (stylecheck)
server/server.go:40:39: importShadow: shadow of imported package 'os' (gocritic)
server/server.go:107:3: variable error has same name as predeclared identifier (predeclared)
server/server.go:107:3: redefines-builtin-id: redefinition of the built-in type error (revive)
server/server.go:107:3: builtinShadow: shadowing of predeclared identifier: error (gocritic)
server/server.go:126:1: receiver-naming: receiver name s should be consistent with previous receiver name server for server (revive)
server/server.go:127:2: importShadow: shadow of imported from 'github.com/creativecreature/code-harvest/proxy' package 'proxy' (gocritic)
server/server.go:138:17: G112: Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server (gosec)
server/server_test.go:32:15: Error return value of `a.FocusGained` is not checked (errcheck)
server/server_test.go:48:12: Error return value of `a.OpenFile` is not checked (errcheck)
server/server_test.go:56:15: Error return value of `a.FocusGained` is not checked (errcheck)
server/server_test.go:72:12: Error return value of `a.OpenFile` is not checked (errcheck)
server/server_test.go:88:15: Error return value of `a.FocusGained` is not checked (errcheck)
server/server_test.go:96:14: Error return value of `a.EndSession` is not checked (errcheck)
server/server_test.go:104:18: Error return value of `mockStorage.Read` is not checked (errcheck)
server/server_test.go:129:15: Error return value of `a.FocusGained` is not checked (errcheck)
server/server_test.go:145:12: Error return value of `a.OpenFile` is not checked (errcheck)
server/server_test.go:154:15: Error return value of `a.FocusGained` is not checked (errcheck)
server/server_test.go:163:15: Error return value of `a.FocusGained` is not checked (errcheck)
server/server_test.go:177:12: Error return value of `a.OpenFile` is not checked (errcheck)
server/server_test.go:187:14: Error return value of `a.EndSession` is not checked (errcheck)
server/server_test.go:195:18: Error return value of `mockStorage.Read` is not checked (errcheck)
server/server_test.go:223:15: Error return value of `a.FocusGained` is not checked (errcheck)
server/server_test.go:243:12: Error return value of `a.OpenFile` is not checked (errcheck)
server/server_test.go:269:12: Error return value of `a.OpenFile` is not checked (errcheck)
server/server_test.go:279:14: Error return value of `a.EndSession` is not checked (errcheck)
server/server_test.go:287:18: Error return value of `mockStorage.Read` is not checked (errcheck)
sessions.go:31:25: var-declaration: should drop = 0 from declaration of var totalTime; it is the zero value (revive)
storage/disk/disk.go:17: File is not `goimports`-ed (goimports)
storage/memory/memory.go:4: File is not `goimports`-ed (goimports)
storage/mongo/mongo.go:9: File is not `goimports`-ed (goimports)
storage/mongo/mongo.go:16:38: Comment should end in a period (godot)
storage/mongo/mongo.go:30:34: unexported-return: exported func NewDB returns unexported type *mongo.db, which can be annoying to use (revive)
storage/mongo/mongo.go:136:62: Comment should end in a period (godot)
storage/storage.go:4: File is not `goimports`-ed (goimports)
